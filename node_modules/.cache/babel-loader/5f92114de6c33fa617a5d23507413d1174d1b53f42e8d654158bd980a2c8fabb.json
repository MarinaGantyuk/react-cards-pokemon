{"ast":null,"code":"var _s = $RefreshSig$(),\n  _s2 = $RefreshSig$();\nimport { useState } from \"react\";\nexport function useFlip() {\n  _s();\n  const [isFacingUp, setIsFacingUp] = useState(true);\n  const flipCard = () => {\n    setIsFacingUp(isUp => !isUp);\n  };\n  return [isFacingUp, flipCard];\n}\n_s(useFlip, \"MAa1uxaU8Uj1WEqjPNN6CqCOgcw=\");\nexport function useAxios(URL) {\n  _s2();\n  const [cards, setCards] = useState([]);\n  const addCard = async () => {\n    const response = await axios.get();\n    setCards(cards => [...cards, {\n      ...response.data,\n      id: uuid()\n    }]);\n  };\n}\n_s2(useAxios, \"3Rb2RowhqfSKkufviexCcjkH0X8=\");","map":{"version":3,"names":["useState","useFlip","_s","isFacingUp","setIsFacingUp","flipCard","isUp","useAxios","URL","_s2","cards","setCards","addCard","response","axios","get","data","id","uuid"],"sources":["/Users/marinagantyuk/Desktop/react-cards-pokemon/src/hooks.js"],"sourcesContent":["import { useState } from \"react\";\n\nexport function useFlip() {\n  const [isFacingUp, setIsFacingUp] = useState(true);\n  const flipCard = () => {\n    setIsFacingUp((isUp) => !isUp);\n  };\n  return [isFacingUp, flipCard];\n}\n\nexport function useAxios(URL) {\n  const [cards, setCards] = useState([]);\n  const addCard = async () => {\n    const response = await axios.get();\n    setCards((cards) => [...cards, { ...response.data, id: uuid() }]);\n  };\n}\n"],"mappings":";;AAAA,SAASA,QAAQ,QAAQ,OAAO;AAEhC,OAAO,SAASC,OAAOA,CAAA,EAAG;EAAAC,EAAA;EACxB,MAAM,CAACC,UAAU,EAAEC,aAAa,CAAC,GAAGJ,QAAQ,CAAC,IAAI,CAAC;EAClD,MAAMK,QAAQ,GAAGA,CAAA,KAAM;IACrBD,aAAa,CAAEE,IAAI,IAAK,CAACA,IAAI,CAAC;EAChC,CAAC;EACD,OAAO,CAACH,UAAU,EAAEE,QAAQ,CAAC;AAC/B;AAACH,EAAA,CANeD,OAAO;AAQvB,OAAO,SAASM,QAAQA,CAACC,GAAG,EAAE;EAAAC,GAAA;EAC5B,MAAM,CAACC,KAAK,EAAEC,QAAQ,CAAC,GAAGX,QAAQ,CAAC,EAAE,CAAC;EACtC,MAAMY,OAAO,GAAG,MAAAA,CAAA,KAAY;IAC1B,MAAMC,QAAQ,GAAG,MAAMC,KAAK,CAACC,GAAG,CAAC,CAAC;IAClCJ,QAAQ,CAAED,KAAK,IAAK,CAAC,GAAGA,KAAK,EAAE;MAAE,GAAGG,QAAQ,CAACG,IAAI;MAAEC,EAAE,EAAEC,IAAI,CAAC;IAAE,CAAC,CAAC,CAAC;EACnE,CAAC;AACH;AAACT,GAAA,CANeF,QAAQ"},"metadata":{},"sourceType":"module","externalDependencies":[]}